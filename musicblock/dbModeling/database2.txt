﻿DROP SEQUENCE seq_user_ucode;
﻿DROP SEQUENCE seq_user_ucode;
DROP SEQUENCE seq_block_bcode;
DROP SEQUENCE seq_music_mcode;
DROP SEQUENCE seq_block_bhash;
DROP SEQUENCE seq_music_mhash;

CREATE SEQUENCE seq_user_ucode	INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE seq_block_bcode	INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE seq_music_mcode	INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE seq_block_bhash	INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE seq_music_mhash	INCREMENT BY 1 START WITH 1;
/* Block */
DROP TABLE BLOCK 
	CASCADE CONSTRAINTS;

/* 블럭해시태그 */
DROP TABLE BLOCK_HASH 
	CASCADE CONSTRAINTS;

/* 블럭감정 */
DROP TABLE Block_Emotion 
	CASCADE CONSTRAINTS;

/* User */
DROP TABLE USERS 
	CASCADE CONSTRAINTS;

/* Music */
DROP TABLE MUSIC 
	CASCADE CONSTRAINTS;

/* 음악감정 */
DROP TABLE MUSIC_EMOTION 
	CASCADE CONSTRAINTS;

/* 음악해시태그 */
DROP TABLE MUSIC_HASH 
	CASCADE CONSTRAINTS;

/* Block */
CREATE TABLE BLOCK (
	BCODE INTEGER NOT NULL, /* BlockCode */
	UCODE INTEGER NOT NULL, /* UserCode */
	NOTE VARCHAR(255) NOT NULL, /* 음표 */
	PCOUNT INTEGER NOT NULL, /* PlayCount */
	DCOUNT INTEGER NOT NULL, /* DownCount */
	BTITLE VARCHAR(100) NOT NULL, /* Btitle */
	REGDATE DATE NOT NULL, /* 등록일 */
	TIME INTEGER NOT NULL /* 블록시간 */
);

CREATE UNIQUE INDEX PK_BLOCK
	ON BLOCK (
		BCODE ASC
	);

ALTER TABLE BLOCK
	ADD
		CONSTRAINT PK_BLOCK
		PRIMARY KEY (
			BCODE
		);

/* 블럭해시태그 */
CREATE TABLE BLOCK_HASH (
	HCODE INTEGER NOT NULL, /* Hcode */
	BCODE INTEGER NOT NULL, /* BlockCode */
	BTAG VARCHAR(20) NOT NULL /* HashTag */
);

CREATE UNIQUE INDEX PK_BLOCK_HASH
	ON BLOCK_HASH (
		HCODE ASC
	);

CREATE INDEX IX_BLOCK_HASH
	ON BLOCK_HASH (
		BTAG ASC
	);

ALTER TABLE BLOCK_HASH
	ADD
		CONSTRAINT PK_BLOCK_HASH
		PRIMARY KEY (
			HCODE
		);

/* 블럭감정 */
CREATE TABLE Block_Emotion (
	BCODE INTEGER NOT NULL, /* BlockCode */
	BEMOTION INTEGER NOT NULL /* Emotion */
);

CREATE UNIQUE INDEX PK_Block_Emotion
	ON Block_Emotion (
		BCODE ASC,
		BEMOTION ASC
	);

ALTER TABLE Block_Emotion
	ADD
		CONSTRAINT PK_Block_Emotion
		PRIMARY KEY (
			BCODE,
			BEMOTION
		);

/* User */
CREATE TABLE USERS (
	UCODE INTEGER NOT NULL, /* UserCode */
	NICK VARCHAR(20) NOT NULL, /* Nickname */
	EMAIL VARCHAR2(40) NOT NULL, /* 이메일 */
	PASSWORD VARCHAR(64) NOT NULL /* 비밀번호 */
);

CREATE UNIQUE INDEX PK_USERS
	ON USERS (
		UCODE ASC
	);

CREATE UNIQUE INDEX UIX_USERS
	ON USERS (
		NICK ASC
	);

CREATE UNIQUE INDEX UIX_USERS2
	ON USERS (
		EMAIL ASC
	);

ALTER TABLE USERS
	ADD
		CONSTRAINT PK_USERS
		PRIMARY KEY (
			UCODE
		);

ALTER TABLE USERS
	ADD
		CONSTRAINT UK_USERS
		UNIQUE (
			NICK
		);

ALTER TABLE USERS
	ADD
		CONSTRAINT UK_USERS2
		UNIQUE (
			EMAIL
		);

/* Music */
CREATE TABLE MUSIC (
	MCODE INTEGER NOT NULL, /* MusicCode */
	UCODE INTEGER NOT NULL, /* UserCode */
	CMPT clob NOT NULL, /* 가진음표 */
	PCOUNT INTEGER NOT NULL, /* PlayCount */
	DCOUNT INTEGER NOT NULL, /* DownCount */
	MTITLE VARCHAR(150) NOT NULL, /* Mtitle */
	REGDATE DATE NOT NULL /* 등록일 */
);

CREATE UNIQUE INDEX PK_MUSIC
	ON MUSIC (
		MCODE ASC
	);

ALTER TABLE MUSIC
	ADD
		CONSTRAINT PK_MUSIC
		PRIMARY KEY (
			MCODE
		);

/* 음악감정 */
CREATE TABLE MUSIC_EMOTION (
	MCODE INTEGER NOT NULL, /* MusicCode */
	MEMOTION INTEGER NOT NULL /* Emotion */
);

CREATE UNIQUE INDEX PK_MUSIC_EMOTION
	ON MUSIC_EMOTION (
		MCODE ASC,
		MEMOTION ASC
	);

CREATE INDEX IX_MUSIC_EMOTION
	ON MUSIC_EMOTION (
		MEMOTION ASC
	);

ALTER TABLE MUSIC_EMOTION
	ADD
		CONSTRAINT PK_MUSIC_EMOTION
		PRIMARY KEY (
			MCODE,
			MEMOTION
		);

/* 음악해시태그 */
CREATE TABLE MUSIC_HASH (
	HCODE INTEGER NOT NULL, /* Hcode */
	MCODE INTEGER NOT NULL, /* MusicCode */
	MTAG VARCHAR(20) NOT NULL /* HashTag */
);

CREATE UNIQUE INDEX PK_MUSIC_HASH
	ON MUSIC_HASH (
		HCODE ASC
	);

CREATE INDEX IX_MUSIC_HASH
	ON MUSIC_HASH (
		MTAG ASC
	);

ALTER TABLE MUSIC_HASH
	ADD
		CONSTRAINT PK_MUSIC_HASH
		PRIMARY KEY (
			HCODE
		);

ALTER TABLE BLOCK
	ADD
		CONSTRAINT FK_USERS_TO_BLOCK
		FOREIGN KEY (
			UCODE
		)
		REFERENCES USERS (
			UCODE
		);

ALTER TABLE BLOCK_HASH
	ADD
		CONSTRAINT FK_BLOCK_TO_BLOCK_HASH
		FOREIGN KEY (
			BCODE
		)
		REFERENCES BLOCK (
			BCODE
		);

ALTER TABLE Block_Emotion
	ADD
		CONSTRAINT FK_BLOCK_TO_Block_Emotion
		FOREIGN KEY (
			BCODE
		)
		REFERENCES BLOCK (
			BCODE
		);

ALTER TABLE MUSIC
	ADD
		CONSTRAINT FK_USERS_TO_MUSIC
		FOREIGN KEY (
			UCODE
		)
		REFERENCES USERS (
			UCODE
		);

ALTER TABLE MUSIC_EMOTION
	ADD
		CONSTRAINT FK_MUSIC_TO_MUSIC_EMOTION
		FOREIGN KEY (
			MCODE
		)
		REFERENCES MUSIC (
			MCODE
		);

ALTER TABLE MUSIC_HASH
	ADD
		CONSTRAINT FK_MUSIC_TO_MUSIC_HASH
		FOREIGN KEY (
			MCODE
		)
		REFERENCES MUSIC (
			MCODE
		);

INSERT INTO users(ucode,nick,email,password) VALUES(seq_user_ucode.nextval,'user01','email1@naver.com','1234');
INSERT INTO users(ucode,nick,email,password) VALUES(seq_user_ucode.nextval,'user02','email2@daum.net','1234');
INSERT INTO users(ucode,nick,email,password) VALUES(seq_user_ucode.nextval,'user03','email3@gmail.com','1234');
INSERT INTO users(ucode,nick,email,password) VALUES(seq_user_ucode.nextval,'user04','email4@hanmail.net','1234');
INSERT INTO users(ucode,nick,email,password) VALUES(seq_user_ucode.nextval,'user05','email5@yahoo.com','1234');
INSERT INTO users(ucode,nick,email,password) VALUES(seq_user_ucode.nextval,'user06','email6@naver.com','1234');
INSERT INTO users(ucode,nick,email,password) VALUES(seq_user_ucode.nextval,'user07','email7@daum.net','1234');
INSERT INTO users(ucode,nick,email,password) VALUES(seq_user_ucode.nextval,'user08','email8@gmail.com','1234');
INSERT INTO users(ucode,nick,email,password) VALUES(seq_user_ucode.nextval,'user09','email9@hanmail.net','1234');
INSERT INTO users(ucode,nick,email,password) VALUES(seq_user_ucode.nextval,'user10','email10@naver.com','1234');

INSERT INTO block(BCODE,UCODE,NOTE,PCOUNT,DCOUNT,BTITLE,REGDATE,TIME) VALUES(seq_block_bcode.nextval,'1','5','0','0','아하하하핳',SYSDATE,'4');
INSERT INTO block(BCODE,UCODE,NOTE,PCOUNT,DCOUNT,BTITLE,REGDATE,TIME) VALUES(seq_block_bcode.nextval,'1','1,4,5','0','0','왜안되니',SYSDATE,'4');
INSERT INTO block(BCODE,UCODE,NOTE,PCOUNT,DCOUNT,BTITLE,REGDATE,TIME) VALUES(seq_block_bcode.nextval,'2','4,5','0','0','집가고싶다',SYSDATE,'4');
INSERT INTO block(BCODE,UCODE,NOTE,PCOUNT,DCOUNT,BTITLE,REGDATE,TIME) VALUES(seq_block_bcode.nextval,'2','3,5','0','0','내트북이',SYSDATE,'4');
INSERT INTO block(BCODE,UCODE,NOTE,PCOUNT,DCOUNT,BTITLE,REGDATE,TIME) VALUES(seq_block_bcode.nextval,'3','4,5','0','0','김밤비',SYSDATE,'4');
INSERT INTO block(BCODE,UCODE,NOTE,PCOUNT,DCOUNT,BTITLE,REGDATE,TIME) VALUES(seq_block_bcode.nextval,'3','4,5','0','0','치킨이',SYSDATE,'4');
INSERT INTO block(BCODE,UCODE,NOTE,PCOUNT,DCOUNT,BTITLE,REGDATE,TIME) VALUES(seq_block_bcode.nextval,'4','4,5','0','0','드럽게하하',SYSDATE,'4');
INSERT INTO block(BCODE,UCODE,NOTE,PCOUNT,DCOUNT,BTITLE,REGDATE,TIME) VALUES(seq_block_bcode.nextval,'4','2,5','0','0','안녕',SYSDATE,'4');
INSERT INTO block(BCODE,UCODE,NOTE,PCOUNT,DCOUNT,BTITLE,REGDATE,TIME) VALUES(seq_block_bcode.nextval,'5','2,4','0','0','비버핳',SYSDATE,'4');
INSERT INTO block(BCODE,UCODE,NOTE,PCOUNT,DCOUNT,BTITLE,REGDATE,TIME) VALUES(seq_block_bcode.nextval,'6','4,5','0','0','저녁뭐지',SYSDATE,'4');
INSERT INTO block(BCODE,UCODE,NOTE,PCOUNT,DCOUNT,BTITLE,REGDATE,TIME) VALUES(seq_block_bcode.nextval,'6','1,5','0','0','버거킹',SYSDATE,'4');
INSERT INTO block(BCODE,UCODE,NOTE,PCOUNT,DCOUNT,BTITLE,REGDATE,TIME) VALUES(seq_block_bcode.nextval,'6','4,5','0','0','치킨버거',SYSDATE,'4');

INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(1,5);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(2,1);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(2,4);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(2,5);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(3,4);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(3,5);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(4,4);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(4,5);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(5,4);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(5,5);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(6,4);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(6,5);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(7,4);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(7,5);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(8,2);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(8,5);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(9,2);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(9,4);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(10,4);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(10,5);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(11,1);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(11,5);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(12,4);
INSERT INTO block_emotion(BCODE,BEMOTION) VALUES(12,5);

INSERT INTO block_hash(HCODE,BCODE,BTAG) VALUES(seq_block_bhash.nextval,1,'경모');
INSERT INTO block_hash(HCODE,BCODE,BTAG) VALUES(seq_block_bhash.nextval,1,'오빠');
INSERT INTO block_hash(HCODE,BCODE,BTAG) VALUES(seq_block_bhash.nextval,1,'하이룽');
INSERT INTO block_hash(HCODE,BCODE,BTAG) VALUES(seq_block_bhash.nextval,1,'반가워용');
INSERT INTO block_hash(HCODE,BCODE,BTAG) VALUES(seq_block_bhash.nextval,1,'즐거운');
INSERT INTO block_hash(HCODE,BCODE,BTAG) VALUES(seq_block_bhash.nextval,1,'하루');

commit;
