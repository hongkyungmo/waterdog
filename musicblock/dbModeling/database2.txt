DROP SEQUENCE seq_user_ucode;
DROP SEQUENCE seq_block_bcode;
DROP SEQUENCE seq_music_mcode;

CREATE SEQUENCE seq_user_ucode	INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE seq_block_bcode	INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE seq_music_mcode	INCREMENT BY 1 START WITH 1;

/* Block */
DROP TABLE BLOCK 
	CASCADE CONSTRAINTS;

/* 블럭해시태그 */
DROP TABLE BLOCK_HASH 
	CASCADE CONSTRAINTS;

/* 블럭감정 */
DROP TABLE Block_Emotion 
	CASCADE CONSTRAINTS;

/* User */
DROP TABLE USERS 
	CASCADE CONSTRAINTS;

/* Music */
DROP TABLE MUSIC 
	CASCADE CONSTRAINTS;

/* 음악감정 */
DROP TABLE MUSIC_EMOTION 
	CASCADE CONSTRAINTS;

/* 음악해시태그 */
DROP TABLE MUSIC_HASH 
	CASCADE CONSTRAINTS;

/* Block */
CREATE TABLE BLOCK (
	BCODE INTEGER NOT NULL, /* BlockCode */
	UCODE INTEGER NOT NULL, /* UserCode */
	NOTE VARCHAR(255) NOT NULL, /* 음표 */
	PCOUNT INTEGER NOT NULL, /* PlayCount */
	DCOUNT INTEGER NOT NULL, /* DownCount */
	BTITLE VARCHAR(20) NOT NULL, /* Btitle */
	REGDATE DATE NOT NULL, /* 새 컬럼 */
	TIME INTEGER NOT NULL /* 새 컬럼2 */
);

COMMENT ON TABLE BLOCK IS 'Block';

COMMENT ON COLUMN BLOCK.BCODE IS 'BlockCode';

COMMENT ON COLUMN BLOCK.UCODE IS 'UserCode';

COMMENT ON COLUMN BLOCK.NOTE IS '음표';

COMMENT ON COLUMN BLOCK.PCOUNT IS 'PlayCount';

COMMENT ON COLUMN BLOCK.DCOUNT IS 'DownCount';

COMMENT ON COLUMN BLOCK.BTITLE IS 'Btitle';

COMMENT ON COLUMN BLOCK.REGDATE IS '새 컬럼';

COMMENT ON COLUMN BLOCK.TIME IS '새 컬럼2';

CREATE UNIQUE INDEX PK_BLOCK
	ON BLOCK (
		BCODE ASC
	);

ALTER TABLE BLOCK
	ADD
		CONSTRAINT PK_BLOCK
		PRIMARY KEY (
			BCODE
		);

/* 블럭해시태그 */
CREATE TABLE BLOCK_HASH (
	HCODE INTEGER NOT NULL, /* Hcode */
	BCODE INTEGER NOT NULL, /* BlockCode */
	BTAG VARCHAR(20) NOT NULL /* HashTag */
);

COMMENT ON TABLE BLOCK_HASH IS '블럭해시태그';

COMMENT ON COLUMN BLOCK_HASH.HCODE IS 'Hcode';

COMMENT ON COLUMN BLOCK_HASH.BCODE IS 'BlockCode';

COMMENT ON COLUMN BLOCK_HASH.BTAG IS 'HashTag';

CREATE UNIQUE INDEX PK_BLOCK_HASH
	ON BLOCK_HASH (
		HCODE ASC
	);

CREATE INDEX IX_BLOCK_HASH
	ON BLOCK_HASH (
		BTAG ASC
	);

ALTER TABLE BLOCK_HASH
	ADD
		CONSTRAINT PK_BLOCK_HASH
		PRIMARY KEY (
			HCODE
		);

/* 블럭감정 */
CREATE TABLE Block_Emotion (
	BCODE INTEGER NOT NULL, /* BlockCode */
	HEMOTION INTEGER NOT NULL /* Emotion */
);

COMMENT ON TABLE Block_Emotion IS '블럭감정';

COMMENT ON COLUMN Block_Emotion.BCODE IS 'BlockCode';

COMMENT ON COLUMN Block_Emotion.HEMOTION IS 'Emotion';

CREATE UNIQUE INDEX PK_Block_Emotion
	ON Block_Emotion (
		BCODE ASC,
		HEMOTION ASC
	);

ALTER TABLE Block_Emotion
	ADD
		CONSTRAINT PK_Block_Emotion
		PRIMARY KEY (
			BCODE,
			HEMOTION
		);

/* User */
CREATE TABLE USERS (
	UCODE INTEGER NOT NULL, /* UserCode */
	NICK VARCHAR(20) NOT NULL /* Nickname */
);

COMMENT ON TABLE USERS IS 'User';

COMMENT ON COLUMN USERS.UCODE IS 'UserCode';

COMMENT ON COLUMN USERS.NICK IS 'Nickname';

CREATE UNIQUE INDEX PK_USERS
	ON USERS (
		UCODE ASC
	);

CREATE UNIQUE INDEX UIX_USERS
	ON USERS (
		NICK ASC
	);

ALTER TABLE USERS
	ADD
		CONSTRAINT PK_USERS
		PRIMARY KEY (
			UCODE
		);

ALTER TABLE USERS
	ADD
		CONSTRAINT UK_USERS
		UNIQUE (
			NICK
		);

/* Music */
CREATE TABLE MUSIC (
	MCODE INTEGER NOT NULL, /* MusicCode */
	UCODE INTEGER NOT NULL, /* UserCode */
	CMPT VARCHAR(255) NOT NULL, /* 가진음표 */
	PCOUNT INTEGER NOT NULL, /* PlayCount */
	DCOUNT INTEGER NOT NULL, /* DownCount */
	MTITLE VARCHAR(50) NOT NULL, /* Mtitle */
	REGDATE DATE NOT NULL /* 새 컬럼 */
);

COMMENT ON TABLE MUSIC IS 'Music';

COMMENT ON COLUMN MUSIC.MCODE IS 'MusicCode';

COMMENT ON COLUMN MUSIC.UCODE IS 'UserCode';

COMMENT ON COLUMN MUSIC.CMPT IS '가진음표';

COMMENT ON COLUMN MUSIC.PCOUNT IS 'PlayCount';

COMMENT ON COLUMN MUSIC.DCOUNT IS 'DownCount';

COMMENT ON COLUMN MUSIC.MTITLE IS 'Mtitle';

COMMENT ON COLUMN MUSIC.REGDATE IS '새 컬럼';

CREATE UNIQUE INDEX PK_MUSIC
	ON MUSIC (
		MCODE ASC
	);

ALTER TABLE MUSIC
	ADD
		CONSTRAINT PK_MUSIC
		PRIMARY KEY (
			MCODE
		);

/* 음악감정 */
CREATE TABLE MUSIC_EMOTION (
	MCODE INTEGER NOT NULL, /* MusicCode */
	MEMOTION INTEGER NOT NULL /* Emotion */
);

COMMENT ON TABLE MUSIC_EMOTION IS '음악감정';

COMMENT ON COLUMN MUSIC_EMOTION.MCODE IS 'MusicCode';

COMMENT ON COLUMN MUSIC_EMOTION.MEMOTION IS 'Emotion';

CREATE UNIQUE INDEX PK_MUSIC_EMOTION
	ON MUSIC_EMOTION (
		MCODE ASC,
		MEMOTION ASC
	);

CREATE INDEX IX_MUSIC_EMOTION
	ON MUSIC_EMOTION (
		MEMOTION ASC
	);

ALTER TABLE MUSIC_EMOTION
	ADD
		CONSTRAINT PK_MUSIC_EMOTION
		PRIMARY KEY (
			MCODE,
			MEMOTION
		);

/* 음악해시태그 */
CREATE TABLE MUSIC_HASH (
	HCODE INTEGER NOT NULL, /* Hcode */
	MCODE INTEGER NOT NULL, /* MusicCode */
	MTAG VARCHAR(20) NOT NULL /* HashTag */
);

COMMENT ON TABLE MUSIC_HASH IS '음악해시태그';

COMMENT ON COLUMN MUSIC_HASH.HCODE IS 'Hcode';

COMMENT ON COLUMN MUSIC_HASH.MCODE IS 'MusicCode';

COMMENT ON COLUMN MUSIC_HASH.MTAG IS 'HashTag';

CREATE UNIQUE INDEX PK_MUSIC_HASH
	ON MUSIC_HASH (
		HCODE ASC
	);

CREATE INDEX IX_MUSIC_HASH
	ON MUSIC_HASH (
		MTAG ASC
	);

ALTER TABLE MUSIC_HASH
	ADD
		CONSTRAINT PK_MUSIC_HASH
		PRIMARY KEY (
			HCODE
		);

ALTER TABLE BLOCK
	ADD
		CONSTRAINT FK_USERS_TO_BLOCK
		FOREIGN KEY (
			UCODE
		)
		REFERENCES USERS (
			UCODE
		);

ALTER TABLE BLOCK_HASH
	ADD
		CONSTRAINT FK_BLOCK_TO_BLOCK_HASH
		FOREIGN KEY (
			BCODE
		)
		REFERENCES BLOCK (
			BCODE
		);

ALTER TABLE Block_Emotion
	ADD
		CONSTRAINT FK_BLOCK_TO_Block_Emotion
		FOREIGN KEY (
			BCODE
		)
		REFERENCES BLOCK (
			BCODE
		);

ALTER TABLE MUSIC
	ADD
		CONSTRAINT FK_USERS_TO_MUSIC
		FOREIGN KEY (
			UCODE
		)
		REFERENCES USERS (
			UCODE
		);

ALTER TABLE MUSIC_EMOTION
	ADD
		CONSTRAINT FK_MUSIC_TO_MUSIC_EMOTION
		FOREIGN KEY (
			MCODE
		)
		REFERENCES MUSIC (
			MCODE
		);

ALTER TABLE MUSIC_HASH
	ADD
		CONSTRAINT FK_MUSIC_TO_MUSIC_HASH
		FOREIGN KEY (
			MCODE
		)
		REFERENCES MUSIC (
			MCODE
		);

INSERT INTO users(ucode,nick) VALUES(seq_user_ucode.nextval,'user01');
INSERT INTO users(ucode,nick) VALUES(seq_user_ucode.nextval,'user02');
INSERT INTO users(ucode,nick) VALUES(seq_user_ucode.nextval,'user03');
INSERT INTO users(ucode,nick) VALUES(seq_user_ucode.nextval,'user04');
INSERT INTO users(ucode,nick) VALUES(seq_user_ucode.nextval,'user05');
INSERT INTO users(ucode,nick) VALUES(seq_user_ucode.nextval,'user06');
INSERT INTO users(ucode,nick) VALUES(seq_user_ucode.nextval,'user07');
INSERT INTO users(ucode,nick) VALUES(seq_user_ucode.nextval,'user08');
INSERT INTO users(ucode,nick) VALUES(seq_user_ucode.nextval,'user09');
INSERT INTO users(ucode,nick) VALUES(seq_user_ucode.nextval,'user10');
commit;
